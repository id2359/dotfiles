
                                                                          go


    SPECIAL FORM
    go  -  go to a tag

    USAGE
    go tag

    DESCRIPTION
    Does not return anything, but after a go form completes, execution  con-
    tinues  from  the  label eql to TAG in a lexically-visible tagbody form.
    If no label in the innermost-enclosing tagbody  is  found  that  matches
    TAG, then lexically-visible tagbody forms are examined from innermost to
    outermost.  (Tags in the enclosing tagbody form shadows  tags  with  the
    same  name  in  other  lexically-visible tagbody forms, so the enclosing
    tagbody is always the first choice.) It is an error if no tag  is  lexi-
    cally  visible  to  the  go.  Some COMMON LISP forms, including do, do*,
    dotimes, dolist, prog, and prog*  provide  an  implicit  tagbody  around
    their  body  forms.  This is the COMMON LISP `go to' construct.  Its use
    is discouraged.

    Note that go is used with tagbody for transfer of control in  a  lexical
    context.   The special forms throw and catch provide transfer of control
    in a dynamic context.

    EXAMPLES
    (let ((x 0))
      (tagbody
             begin                                ;; a label
             (incf x)
             (if (< x 10) (go begin))) x) => 10

    SEE ALSO
    CLtL 7:133, catch, do, prog, tagbody, throw






























