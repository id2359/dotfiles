
                                                                  mask-field


    FUNCTION
    mask-field  -  extract unjustified byte from an integer

    USAGE
    mask-field bytespec n

    DESCRIPTION
    Returns a byte of the integer N  as  indicated  by  the  byte  specifier
    BYTESPEC, but leaving the byte in the same position within the result as
    within N.  The extracted byte is returned as a non-negative integer with
    0  bits  in the positions not specified by BYTESPEC.  The byte specifier
    is usually generated by the byte function.  If N is  given  by  a  place
    form  acceptable  to  setf,  then  mask-field  can  be used with setf to
    replace the integer at N with a new integer having the given  value  for
    the specified byte.  The following identities hold:

    (ldb (byte size position) (mask-field (byte size position) n))
      = (ldb (byte size position) n)

    (logbitp i (mask-field (byte size position) n))
      = (and (>= i position) (< i (+ position size)) (logbitp i n))

    (mask-field (byte size position) n)
      = (logand n (dpb -1 (byte size position) 0))

    EXAMPLES
    (setq *print-base* 2)
    (mask-field (byte 4 0) #b10010111) => 111
    (mask-field (byte 4 1) #b10010111) => 10110
    (mask-field (byte 6 2) #b10010111) => 10010100

    SEE ALSO
    CLtL 12:226, ash, boole, byte, byte-position, byte-size, deposit-field,
    dpb, ldb, ldb-test, logbitp, logcount, logtest




























