
                                                                 concatenate


    FUNCTION
    concatenate  -  join several sequences into one

    Usage
    concatenate RESULT-TYPE {SEQUENCES}*

    DESCRIPTION
    Returns a sequence of type RESULT-TYPE that includes all of the elements
    of  all  of  the  argument SEQUENCES in order.  The argument RESULT-TYPE
    must be a subtype of sequence which must be able  to  accommodate  every
    element  of  the argument SEQUENCES.  A new sequence is always returned;
    no data is shared with original arguments.

    When only one sequence is given, a copy of it (of type  RESULT-TYPE)  is
    returned.   (The  coerce  function  may be better suited for simple type
    conversion.) When no sequences are given, an empty sequence of the  type
    RESULT-TYPE is returned.

    The function nconc is a  destructive  counterpart  to  concatenate,  but
    works  only on lists.  There is no destructive counterpart to this func-
    tion for general sequences.

    EXAMPLES
    (concatenate 'string "This is now" " a long string.")
      => "This is now a long string."
    (concatenate 'list '(a b c) '(d e f) '(1 2 3))
      => (a b c d e f 1 2 3)
    (let* ((a '#(1 #(2 3)))
           (b (concatenate 'simple-vector '#(0) a '#(4))))
      (eq (svref a 1) (svref b 2))) => t

    SEE ALSO
    CLtL 14:249, append, coerce, nconc





















































































































































































































































































































































































































































































































































































































































