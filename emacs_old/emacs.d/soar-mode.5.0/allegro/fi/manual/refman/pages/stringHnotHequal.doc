
                                                            string-not-equal


    FUNCTION
    string-not-equal  -  test whether two strings are different, ignoring
      case

    USAGE
    string-not-equal string1 string2 [:start1 s1] [:end1 e1] [:start2 s2]
      [:end2 e2]

    DESCRIPTION
    Returns nil if the string specified by STRING1 is lexicographically  the
    same  as  the string specified by STRING2.  Otherwise the value returned
    is the length of the longest common prefix of the two strings  (that  is
    the  index  of  the first position where the corresponding characters in
    the two strings differ).  Differences in case are ignored when comparing
    characters.   (This  function  considers two characters the same if they
    satisfy  char-equal.   The  corresponding  case-sensitive  function   is
    string/=.) The arguments STRING1 and STRING2 must be strings or symbols.
    If a symbol is supplied, its print name is used as the string.

    The two strings are not equal if they have different lengths  or  if  at
    some  position  the  character  from  one  string  is different from the
    corresponding  character  of  the  other  string  (in   the   sense   of
    char-not-equal).

    To operate on a substring of STRING1, use the :start1 and :end1  keyword
    arguments.   The  :start1  keyword  argument  specifies the index of the
    first character of the substring  of  STRING1  to  examine.   Its  value
    defaults  to  zero  (indicating the first character).  The :end1 keyword
    argument specifies an index one greater than the index of the last char-
    acter of STRING1 to examine. A value of nil is equivalent to the default
    value, the length of the string.  Note that if STRING1 is a string  with
    a  fill  pointer,  only  the active elements of STRING1 can be compared.
    These remarks also apply to the :start2  and  :end2  keyword  arguments,
    which  specify  the  starting  and  ending  indices  of the substring of
    STRING2.  The index returned when this function returns a non-nil  value
    is  an  index  into  the  substring  of the first string relative to the
    beginning of the entire string.

    EXAMPLES
    (string-not-equal "Hello" "hello") => nil
    (string/= "Hello" "hello") => 0
    (string-not-equal "abcde" "abcd" :end1 4) => nil

    SEE ALSO
    CLtL 18:302, char-not-equal, string/=, string-equal, string-greaterp,
    string-lessp, string-not-greaterp, string-not-lessp
















