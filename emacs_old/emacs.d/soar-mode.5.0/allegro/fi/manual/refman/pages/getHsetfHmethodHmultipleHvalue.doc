
                                              get-setf-method-multiple-value


    FUNCTION
    get-setf-method-multiple-value  -  get the setf method for a form

    USAGE
    get-setf-method-multiple-value form

    DESCRIPTION
    Returns the five values which make up the setf method  for  FORM,  which
    must  be  a generalized variable reference.  The difference between this
    function, and get-setf-method is that it is  permissible  to  have  more
    than  one store-variable.  But in fact, there is no way in standard COM-
    MON LISP to define a setf method  which  allows  more  than  one  store-
    variable.   This  function  is provided so that such an extension can be
    added.  The roles played  by  each  of  the  five  values  returned  are
    described briefly below.

    The first two of the five values are a list of temporary variables and a
    list  of forms to bind to those temporary variables.  The third returned
    value is a list, which, unlike get-setf-method, can  contain  more  than
    one  variable  which  will be stored into the generalized variable.  The
    fourth value is called the STORING FORM and is code which will  be  used
    to  store the new value in the generalized variable. This code may refer
    to any of the temporary  variables.   The  fifth  value  is  called  the
    ACCESSING FORM and returns the value of the generalized variable.

    EXAMPLES
    ;;  We define a function TAIL and a setf-method for it.
    ;;  Then, GET-SETF-METHOD-MULTIPLE-VALUE returns five
    ;;  values corresponding to what we defined.
    (defun tail (lis)
      (cdr lis))

    (define-setf-method tail (lis)
      (let* ((temp-var (gensym))            ; temp var for list
             (store-var (gensym)))          ; temp var for new tail
        (values
         (list temp-var)                    ; temporary variables
         (list lis)                         ; value forms
         (list store-var)                   ; store variables
         `(progn
            (rplacd ,temp-var ,store-var)
            ,store-var)                     ; storing form
         `(cdr ,temp-var))))                ; accessing form

    (setq my-list '(a b c)) => (a b c)
    (tail my-list) => (b c)
    (setf (tail my-list) '(x y z)) => (x y z)
    my-list => (a x y z)

    (get-setf-method-multiple-value '(tail my-list)) =>
    (#:g15) (my-list) (#:g16)
    (progn (rplacd #:g15 #:g16) #:g16) (cdr #:g15)

    SEE ALSO
    CLtL 7:107, define-modify-macro, define-setf-method, defsetf, get-setf-
    method, get-setf-method-multiple-value






