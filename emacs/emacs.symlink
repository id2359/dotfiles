(require 'cl)
;; test
;; emacs root
(setq emacs-root (expand-file-name "~/.emacs.d/"))
(setq make-backup-files nil)

(defvar load-paths '(
		     "langs"
		     "settings"
		     "myutils"
		     "themes"
		     "work"
		     "ProofGeneral/generic"))

(loop for location in load-paths
      do (add-to-list 'load-path (concat emacs-root location)))

(require 'package)
(setq package-archives '(
                         ("melpa" . "https://melpa.org/packages/")
			 ("marmalade" . "http://marmalade-repo.org/packages/")
			 ("gnu" . "http://elpa.gnu.org/packages/")))

(add-to-list 'default-frame-alist '(height . 45))
(add-to-list 'default-frame-alist '(width . 189))
			


(setq package-enable-at-startup nil)
(package-initialize)

(when (not package-archive-contents)
  (package-refresh-contents))

(defvar packages '(
                  cl
		  color-theme
		  auto-complete
		  projectile
		  exec-path-from-shell
		  epc
		  jedi
		  neotree
		  magit
		  tramp
		  python-pep8
		  evil
		  python-pylint
		  material-theme
		  tuareg
		  gnu-apl-mode
		  yasnippet
		  py-autopep8
		  evil-leader
		  paredit
		  evil-paredit
		  slime
		  julia-mode
		  ensime
		  scala-mode
		  flycheck
		  feature-mode
		  helm
		  ))

(defvar all-packages-installed t)
(dolist (p packages)
  (unless (package-installed-p p)
    (setq all-packages-installed nil)))

(unless all-packages-installed
  (dolist (p packages)
    (unless (package-installed-p p)
      (package-install p))))



;; settings

;; octave

(autoload 'octave-mode "octave-mod" nil t)
(setq auto-mode-alist
      (cons '("\\.m$" . octave-mode) auto-mode-alist))
		     

(autoload 'clips-mode "clips-mode" nil t)
(setq auto-mode-alist
     (cons '("\\.clp" . clips-mode) auto-mode-alist))

;; autopep8 - not sure I want it always
(require 'py-autopep8)
;;(add-hook 'python-mode-hook 'py-autopep8-enable-on-save)

;; Proof General
(require 'proof-site)
(require 'tramp)
(require 'go-mode)
(require 'rebol)
(require 'gnu-apl-mode)
(require 'julia-shell)
(require 'mysettings)
(require 'myutils)
(require 'mykeybindings)

;; install this manually

(add-to-list 'load-path (concat emacs-root "evil"))

(require 'evil)
(evil-mode 1)
(show-paren-mode)

(require 'django-html-mode)

(when (memq window-system '(mac ns))
  (exec-path-from-shell-initialize))

(setq frame-title-format
      (list (format "emacs %s %%S: %%j " (system-name))
        '(buffer-file-name "%f" (dired-directory dired-directory "%b"))))

  
(when (eq system-type 'darwin)
  (require 'ls-lisp)
  (setq ls-lisp-use-insert-directory-program nil))

(when (eq system-type 'darwin)
  (add-to-list 'load-path "/Applications/Macaulay2-1.6/share/emacs/site-lisp")
  (load "M2-init")
  (global-set-key [f12] 'M2))
