(require 'cl)
;; test
;; emacs root
(setq emacs-root (expand-file-name "~/.emacs.d/"))

(setq make-backup-files nil)

(defvar load-paths '(
		     "langs"
		     "settings"
		     "myutils"
		     "themes"
		     "work"
		     "ProofGeneral/generic"))

(loop for location in load-paths
      do (add-to-list 'load-path (concat emacs-root location)))

(require 'package)
(setq package-archives '(
			 ("marmalade" . "http://marmalade-repo.org/packages/")
			 ("melpa" . "http://melpa.milkbox.net/packages/")
			 ("gnu" . "http://elpa.gnu.org/packages/")))


(setq package-enable-at-startup nil)
(package-initialize)

(when (not package-archive-contents)
  (package-refresh-contents))

(defvar packages '(
                  cl
		  color-theme
		  auto-complete
		  projectile
		  exec-path-from-shell
		  epc
		  jedi
		  neotree
		  magit
		  tramp
		  python-pep8
		  python-pylint
		  material-theme
		  tuareg
		  gnu-apl-mode
		  yasnippet
		  py-autopep8
		  ))

(defvar all-packages-installed t)
(dolist (p packages)
  (unless (package-installed-p p)
    (setq all-packages-installed nil)))

(unless all-packages-installed
  (dolist (p packages)
    (unless (package-installed-p p)
      (package-install p))))



;; settings


;; octave

(autoload 'octave-mode "octave-mod" nil t)
(setq auto-mode-alist
      (cons '("\\.m$" . octave-mode) auto-mode-alist))
		     

(autoload 'clips-mode "clips-mode" nil t)
(setq auto-mode-alist
     (cons '("\\.clp" . clips-mode) auto-mode-alist))

;; autopep8 - not sure I want it always
(require 'py-autopep8)
;;(add-hook 'python-mode-hook 'py-autopep8-enable-on-save)

;; Proof General
(require 'proof-site)
(require 'tramp)
(require 'go-mode)
(require 'rebol)
(require 'gnu-apl-mode)
(require 'mysettings)
(require 'myutils)
(require 'mykeybindings)

;; install this manually

(add-to-list 'load-path (concat emacs-root "evil"))

(require 'evil)
(evil-mode 1)



(when (memq window-system '(mac ns))
  (exec-path-from-shell-initialize))

(setq frame-title-format
      (list (format "emacs %s %%S: %%j " (system-name))
        '(buffer-file-name "%f" (dired-directory dired-directory "%b"))))

  
(when (eq system-type 'darwin)
  (require 'ls-lisp)
  (setq ls-lisp-use-insert-directory-program nil))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(j-path "~/jpath/bin/"))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
