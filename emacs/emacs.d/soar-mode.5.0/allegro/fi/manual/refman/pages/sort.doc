
                                                                        sort


    FUNCTION
    sort  -  sort a sequence according to some criterion (destructive)

    Usage
    sort SEQUENCE PRED [:key KEYFNC]

    SIDE EFFECTS
    The argument SEQUENCE may be destroyed (by permuting elements in place).

    DESCRIPTION
    Returns a sequence sorted according to the  order  determined  by  PRED.
    PRED, which must accept two arguments, should return true if and only if
    the first argument comes strictly before the second, according to  what-
    ever metric is appropriate.  SEQUENCE must be a sequence.

    If the keyword argument :key is specified and its value  KEYFNC  is  not
    nil,  KEYFNC  must  be a function that accepts one argument.  It will be
    applied to each element of SEQUENCE before that element is tested.  When
    unspecified or nil, it effectively defaults to the function identity.

    sort is not guaranteed to be stable, meaning that two elements that  are
    considered  equal  (i.e.   PRED  returns false for both orderings of the
    elements as arguments) may or may not appear in the same  order  in  the
    result as in the original sequence.  The function stable-sort guarantees
    stability.

    If the functions KEYFNC and PRED always return,  the  sorting  operation
    will terminate.  The result is always a permutation of SEQUENCE.

    EXAMPLES
    ;;  The value of BOOKVECTOR is the vector shown.
    bookvector =>
    #(("Neuromancer" "William Gibson")
      ("Time Enough For Love" "Robert Heinlein")
      ("Dona Flor" "Jorge Amado")
      ("Riddley Walker" "Russel Hoban")
      ("Engines of Creation" "K. Eric Drexler"))

    (sort bookvector #'string-lessp :key #'car)
      =>
    #(("Dona Flor" "Jorge Amado")
      ("Engines of Creation" "K. Eric Drexler")
      ("Neuromancer" "William Gibson")
      ("Riddley Walker" "Russel Hoban")
      ("Time Enough For Love" "Robert Heinlein"))

    SEE ALSO
    CLtL 14:258, :key, stable-sort














