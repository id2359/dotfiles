
                                                                        loop


    MACRO
    loop  -  loop through forms repeatedly

    USAGE
    loop {form}*

    DESCRIPTION
    The loop construct is the simplest of the COMMON LISP  iteration  forms.
    It evaluates the FORMS provided as arguments sequentially, re-evaluating
    the first after the last is evaluated.  This is  repeated  indefinitely.
    Only  an explicit return or throw will terminate the loop, returning the
    values (if any) specified by the return or throw.   The  loop  construct
    sets up an implicit block named nil.

    Each FORM in the loop construct must be nonatomic.   Atomic  values  are
    reserved for future extensions.

    EXAMPLES
    ;;  print integers from 1 to 10 and return 11
    (let ((i 1))
      (loop
        (print i)
        (incf i)
        (when
          (= i 11) (return i)))) => 11

    SEE ALSO
    CLtL 7:121, block, do, return, throw


































