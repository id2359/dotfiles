
                                                                subst-if-not


    FUNCTION
    subst-if-not  -  copy tree replacing items that do not satisfy a test

    Usage
    subst-if-not NEWITEM PRED TREE [:key KEYFNC]

    DESCRIPTION
    Returns a copy of TREE in which every subtree or leaf (car  or  cdr)  at
    all levels failing to satisfy the predicate PRED is replaced by NEWITEM.
    An element fails to satisfy PRED if PRED applied to the element  returns
    false.   PRED  must  accept one argument.  This function is a variant of
    subst.  While the argument TREE is not changed, the  returned  tree  may
    share parts with it.

    If the keyword argument :key is specified and its value  KEYFNC  is  not
    nil,  KEYFNC  must  be a function that accepts one argument.  It will be
    applied to each element of TREE before that  element  is  tested.   When
    unspecified or nil, it effectively defaults to the function identity.

    EXAMPLES
    (subst-if-not 'x #'consp '(a (3 b (5) 2)))
      => (x (x x (x . x) x . x) . x)
    (subst-if-not 'x #'numberp '(1 (2 3 (4) 5))) => x

    SEE ALSO
    CLtL 15:273, nsubst, nsubst-if, nsubst-if-not, nsubstitute, subst,
    subst-if, substitute



























































































































































































































































































































































































































































































































































































































































