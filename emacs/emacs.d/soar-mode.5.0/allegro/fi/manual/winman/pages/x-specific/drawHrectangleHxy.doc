
                                                           draw-rectangle-xy


    FUNCTION
    draw-rectangle-xy  -  draw a rectangle on a graphic stream

    Usage
    draw-rectangle-xy GR-STREAM X Y WIDTH HEIGHT [:brush-width BRUSH-WIDTH]
      [:color COLOR] [:dashing DASHING] [:operation OPERATION]

    DESCRIPTION
    Returns nil but this function is called for its side effects.  A rectan-
    gle  of  dimensions  WIDTH  and  HEIGHT  is drawn on the graphics-stream
    GR-STREAM, with the lower left-hand corner at the position determined  X
    and Y.  A graphics-stream may be a window-stream or a bitmap-stream.  If
    GR-STREAM is a window-stream, coordinates are in the  extent  coordinate
    system.

    The arguments WIDTH, HEIGHT, X, and Y should be integers. Note that  the
    actual  width  and height of the rectangle will be one pixel larger than
    specified by WIDTH and HEIGHT.  (This follows  the  X  standard  way  of
    drawing rectangles.)

    The keyword argument :brush-width specifies the width, in pixels, of the
    lines  that are drawn.  The default value is the value of window-stream-
    brush-width applied to GR-STREAM.  The  value  must  be  a  non-negative
    integer.   The value 0 tells the system to draw lines of width 1, but to
    ignore the strict rules for which pixels must be on  for  such  a  line.
    The  drawing  is thus faster at the cost of a small loss of quality.  We
    recommend 0 instead of 1 unless high quality is quite important.

    The keyword argument :operation specifies  the  boolean  operation  that
    will  be used when the bits from the drawing operation are combined with
    the bits on the graphic stream.  Its value  defaults  to  the  value  of
    window-stream-operation  applied to GR-STREAM.  All the sixteen standard
    boolean operations of COMMON LISP are supported.  If you are on a  color
    machine, we recommend using boole-1 only.

    The keyword argument :color specifies  the  drawing  color.   Its  value
    defaults to the value returned by window-stream-foreground-color applied
    to GR-STREAM.

    The keyword argument :dashing  specifies  the  dashing  pattern  of  the
    lines.  Its value must be a list of positive integers, a single positive
    integer, or nil.  Its value defaults to the value  returned  by  window-
    stream-dashing  applied  to  GR-STREAM.  The value nil indicates a solid
    line.  A list indicates a pattern of on  pixels  and  off  pixels.   For
    example,  the dashing pattern (1 2 3 4) denotes 1 bit on, 2 off, 3 on, 4
    off, 1 on 2 off, 3 on, etc. If the length of the list is odd,  then  the
    dashing  pattern cycles.  For example the list (1 2 3) would produce the
    dashing pattern 1 on, 2 off, 3 on, 1 off, 2 on, 3 off,  etc.   A  single
    integer  or  a  list  containing a single integer is a shorthand for the
    integer repeated twice in the usual list representation.  For example, a
    value of 2 or (2) signifies 2 on, 2 off, 2 on, etc.

    EXAMPLES
    (setf *my-win*
          (make-window-stream
           :left 100
           :bottom 300
           :width 300
           :height 300
           :activate-p t))

    (draw-rectangle-xy *my-win*
                       150 200 50 100 :brush-width 2 )

    SEE ALSO
    draw-circle, draw-filled-circle, draw-filled-rectangle, draw-filled-
    rectangle-xy, draw-line, draw-point, draw-rectangle, draw-to, window-
    stream-brush-width, window-stream-dashing, window-stream-foreground-
    color, window-stream-operation

















































































































































































































































































































































































































































































































































































































