
                                        window-stream-frame-left-button-down


    FUNCTION
    window-stream-frame-left-button-down  -  get the list of functions
      called by the frame-left-button-down method

    Usage
    window-stream-frame-left-button-down WSTREAM

    DESCRIPTION
    Returns the list of functions that will be called when  the  frame-left-
    button-down  method for the window-stream WSTREAM is called.  The system
    calls this method when the left button is depressed in the  frame  of  a
    window.  You do not (normally) call this method directly.

    The initial contents of this list depends of whether  the  right  button
    menu  is  installed  on WSTREAM.  (The function add-right-button-menu is
    the only function initially in  the  *make-window-stream-actions*  list.
    If that list is in its initial state when a window is created, the right
    button menu will be installed on the window.) If it is,  the  list  con-
    tains the single function cw::window-frame-left-down (note this function
    is not exported, so the package qualifier and the double colon are  both
    necessary).   This  function  exposes the window (as depressing the left
    button in the frame is supposed to do when  the  right  button  menu  is
    installed).   If  you modify the list, you must include this function if
    you want the left button to expose the window.  If the right button menu
    is  not  installed, the initial list contains the single function frame-
    button, calling the frame-button method.

    You can modify  the  list  with  modify-window-stream-method.   You  can
    replace  the  entire  list  with  this function and setf (remembering to
    include cw::window-frame-left-down if desired).  The  function  restore-
    default-window-stream-method  can  be  used  to  restore the list to the
    value (frame-button), NOT (cw::window-frame-left-down).

    EXAMPLES
    ;;  We make a window.
    (setf *my-win*
          (make-window-stream :left 100 :bottom 200
                              :width 100 :height 100
                              :activate-p t))

    ;;  We assume *MAKE-WINDOW-STREAM-ACTIONS* is in its
    ;;  initial state, so CW::WINDOW-FRAME-LEFT-DOWN is in
    ;;  The list of functions.
    (window-steam-frame-left-button-down *my-win*)
      => (cw::window-frame-left-down)

    (defun my-after-frame-left (wstream mouse-state event)
      (declare (ignore event))
          (format  *standard-output*
                   "Position: ~S ~% "
                   (mouse-state-position mouse-state)))

    (modify-window-stream-method *my-win* :frame-left-button-down
                                  :after 'my-after-frame-button)
    ;;  Whenever the left button is depressed in *MY-WIN*, the
    ;;  position is printed to *STANDARD-OUTPUT*.

    (window-stream-frame-left-button-down *my-win*)
      => (cw::window-stream-left-down my-after-frame-button)

    ;;  If we restore the list with RESTORE-WINDOW-STREAM-METHOD,
    ;;  the list contains FRAME-BUTTON only.
    (restore-window-stream-method *my-win* :frame-left-button-down)
    (window-stream-frame-left-button-down *my-win*)
      => (frame-button)

    ;;  If you want CW::WINDOW-STREAM-LEFT-DOWN to be in the
    ;;  list, use SETF to restore the list.
    (setf (window-stream-frame-left-button-down *my-win*)
      '(cw::window-frame-left-down))
    (window-steam-frame-left-button-down *my-win*)
      => (cw::window-frame-left-down)

    SEE ALSO
    add-right-button-menu, frame-button, frame-left-button-down, modify-
    window-stream-method, restore-default-window-stream-method




















































